#define F_CPU 8000000UL
#include <avr/io.h>
#include <LabBoard.h>
#include <stdio.h>
#include <util/delay.h>

#define up !(PINA & (1<<3))
#define down !(PINA & (1<<5))
#define right !(PINA & (1<<4))
#define select !(PINA & (1<<6))
#define left !(PINA & (1<<7))

void setup (void);
void mainMenu(void);
char showCP(char cp);
char lamp(void);
char motor (void);
char speaker (void);
char led (void);
char ledmenu (void);

int cp,clp;
signed char curposition; //signed char -127 to 126
int curledposition;
int main(void)
{
	
	setup();
	
	while (1)
	{
		mainMenu();
	}
}

void mainMenu(void)
{
	
	char line0[20], line1[20], line2[20], line3[20];
	
	_delay_ms (100);
	SLCDTurnOffBlinkingCursor();
	
	sprintf(line0,"1) Motor");
	SLCDSetCursorPosition(0,0);
	SLCDWriteString(line0);

	sprintf(line1,"2) Lamp");
	SLCDSetCursorPosition(1,0);
	SLCDWriteString(line1);

	sprintf(line2,"3) Speaker");
	SLCDSetCursorPosition(2,0);
	SLCDWriteString(line2);

	sprintf(line3,"4) RGB LED");
	SLCDSetCursorPosition(3,0);
	SLCDWriteString(line3);
	
	SLCDSetCursorPosition(curposition, 2);
	SLCDTurnOnBlinkingCursor();
	
	if(up)
	{
		curposition--;
		_delay_ms(150);
		cp = curposition;
		if (curposition < 0)
		{
			curposition = 3;
		}
		
	}
	else if(down)
	{
		curposition++;
		_delay_ms(150);
		cp = curposition;
		
		if (curposition == 4)
		{
			curposition = 0;
		}
	}
	
	if(select||right)
	{
		if(cp == 0)
		{
			motor();
		}
		else if(cp == 1)
		{
			lamp();
		}
		else if(cp == 2)
		{
			speaker();
		}
		else
		{
			led();
		}
	
	}
}

char motor(void)
{ 
	int speed = 0;
	SLCDClearScreen();
	SLCDTurnOffBlinkingCursor();
	while (!left)
	{
		char line0[20], line1[20];
		sprintf(line0,"Motor Speed");
		SLCDSetCursorPosition(0,0);
		SLCDWriteString(line0);
		
				if (up)
				{
					speed++;
					_delay_ms(100);
					if (speed > 100)
					{
						speed = 100;
					}
				}
				
				else if (down)
				{
					speed--;
					_delay_ms(100);
					if (speed <0)
					{
						speed = 0;
					}
					
				}
				OCR1A = speed/2; // A is for the motor
				sprintf(line1,"%2i%%", speed);
				SLCDSetCursorPosition(1,1);
				SLCDWriteString(line1);
	}
	SLCDClearScreen();
}

char lamp(void)   /// always on
{
	int intensity = 0;

	SLCDClearScreen();
	SLCDTurnOffBlinkingCursor();
	while (!left)
	{
		char line0[20], line1[20];
		sprintf(line0,"Lamp Brightness");
		SLCDSetCursorPosition(0,0);
		SLCDWriteString(line0);
				if (up)
				{
					intensity++;
					_delay_ms(100);
					if (intensity > 100)
					{
						intensity = 100;
					}
				}
				
				else if (down)
				{
					intensity--;
					_delay_ms(100);
					if (intensity <0)
					{
						intensity = 0;
					}
					
				}
				OCR1B = intensity/2;  // B is for lamp
				sprintf(line1,"%2i%%", intensity);
				SLCDSetCursorPosition(1,1);
				SLCDWriteString(line1);
	}
	SLCDClearScreen();
}

char speaker (void)
{
	int frequency = 0;
	SLCDClearScreen();
	SLCDTurnOffBlinkingCursor();
	while (!left)
	{
		char line0[20], line1[20];
		sprintf(line0,"Speaker Frequency");
		SLCDSetCursorPosition(0,0);
		SLCDWriteString(line0);
		
		if (up)
				{
					frequency++;
					_delay_ms(100);
					if (frequency >25)
					{
						frequency = 25;
					}
				}
				
				else if (down)
				{
					frequency--;
					_delay_ms(100);
					if (frequency < 0)
					{
						frequency = 0;
					}
					
				}
				OCR2A = 500/frequency; // 2A is for the speaker
				sprintf(line1,"%2ikHz", frequency);
				SLCDSetCursorPosition(1,1);
				SLCDWriteString(line1);
	}
	SLCDClearScreen();
}

char led (void)
{
	SLCDClearScreen();
	SLCDTurnOffBlinkingCursor();
		char line0[20], line1[20], line2[20], line3[20];
		
		while (!left)
		{
			curledposition = 1;
			sprintf(line0,"RGB LED Control");
			SLCDSetCursorPosition(0,0);
			SLCDWriteString(line0);
		
			sprintf(line1,"1) Set Red mA");
			SLCDSetCursorPosition(1,0);
			SLCDWriteString(line1);
			
			sprintf(line2,"2) Set Green mA");
			SLCDSetCursorPosition(2,0);
			SLCDWriteString(line2);
			
			sprintf(line3,"3) Set Blue mA");
			SLCDSetCursorPosition(3,0);
			SLCDWriteString(line3);
			
			ledmenu();
		}
	
	SLCDClearScreen();
}

char ledmenu (void)
{
	char line0[20];
	curledposition = 1;
	SLCDSetCursorPosition(curledposition, 2);
	SLCDTurnOnBlinkingCursor();
	while (!left)
	{
		if(up)
		{
			if (curledposition <= 1)
			{
				curledposition = 3;
				_delay_ms(150);
			}
			else
			{
				curledposition--;
				_delay_ms(150);
				clp = curledposition;
			}
			
		}
		else if(down)
		{
			
			if (curledposition == 4)
			{
				curledposition = 1;
				_delay_ms(150);
			}
			else
			{
				curledposition++;
				_delay_ms(150);
				clp = curledposition;
			}
			
		}
		
		if(select||right)
		{
			if(clp == 1)
			{
				SLCDClearScreen();
				SLCDTurnOffBlinkingCursor();
				sprintf(line0,"RGB Red LED");
				SLCDSetCursorPosition(0,0);
				SLCDWriteString(line0);
			}
			else if(clp == 2)
			{
				SLCDClearScreen();
				SLCDTurnOffBlinkingCursor();
				sprintf(line0,"RGB Green LED");
				SLCDSetCursorPosition(0,0);
				SLCDWriteString(line0);
			}
			else
			{
				SLCDClearScreen();
				SLCDTurnOffBlinkingCursor();
				sprintf(line0,"RGB Green LED");
				SLCDSetCursorPosition(0,0);
				SLCDWriteString(line0);
			}
			
		}
		SLCDSetCursorPosition(curledposition, 2);
	}

}


void setup (void)
{
	SLCDInit();         // Initialize the LCD.
	SLCDDisplayOn();    // Switched On the LCD.
	SLCDClearScreen();
	DDRA = 0x00;
	DDRC = 0xFF;
	DDRE= 0x03;
	PORTE = 0x01; // kinda just is 
	
	TCCR1A = 0b10100010; //channel A (motor), channel B (lamp)
	TCCR1B = 0b00011010;   //prescaler 8
	DDRB = 0b01110000; // bit 6,5,4 turned on to turn on the motor (5),lamp (6) and speaker (4)
	ICR1 = 49;
	
	TCCR2A = 0b01000010; //speaker- CTC mode
	TCCR2B = 0b00000010; // 8 prescaler
	
	PORTB = 0b01010000; // speaker 
}

